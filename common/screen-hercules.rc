#!/usr/bin/screen -c 

# vim: ts=8 noexpandtab sts=8

# Install screen, Hercules, and c3270 before running this.

# Run this script from the main directory of a Hercules instance to bring
# up a Hercules instance under screen. Use a window size of 80x27 to have
# room for a console with a c3270 menu bar at the top and both c3270 &
# screen status lines at the bottom.

The hercules.environment file used in this environment has the following
variables in it, mostly used by the hercules.sh and hercules.conf for a
particular machine and shell scripts run in support of it. This script
needs the HERCULES_NAME name set both to set the name for locking used
by ${HOME}/bin/hercules.sh and to set the LPAR name.

# setenv  HERCULES_NAME		# The name machine is known by (directory)
# setenv  HERCULES_CPU		# Number of CPUs, default is 1
# setenv  HERCULES_MODEL	# CPU model, such as 3158, 3033, or 4381
# setenv  HERCULES_IPL		# DASD address of IPL volume
# setenv  HERCULES_SERIAL	# default is 012449 (IBM Kingston zip code)
# setenv  HERCULES_CORE		# memory -- default is 16M
# setenv  HERCULES_PASSWORD	# for the web interface

# setenv  HERCULES_RSCS		# Local RSCS name

# setenv  HERCULES_EPOCH	# Use 1960 with systems not patched for Y2K
# setenv  HERCULES_YROFFSET	# Use -28 with systems not patched for Y2K 

# Our common configuration expects the following ports defined; they MUST
# be unique for each Hercules instance run simultaneously on same host. We
# tend to use 3270n, 1442n, 2540n and 808n, where n is the same digit for
# a single emulated machine.

# setenv	HERCULES_CONSOLE	# 3270 port for console and TSO
# setenv	HERCULES_ASCII_READER	# Port for data sent in ASCII
# setenv	HERCULES_EBCDIC_READER	# Port for data sent in EBCDIC 
# setenv	HERCULES_WEB		# Hercules web console/documentation

source hercules.environment

altscreen	on
autodetach	on
defscrollback	1000
hardstatus	alwayslastline "%{Rk} %S %{kW} %h %n%f %t %= %H%? %l %{Rk} %S "
nethack		on
sessionname	${HERCULES_NAME}
setenv		HERCULES_RC      ../common/hercules-under-screen.rc 
startup_message off

# Run the primary hercules task. The wrapper script will setup
# directories, take out the log trash, verify the hercules binary exists,
# make an alias of the binary, and start the hercule binary with logging.
#
# When the hercules binary runs, the HERCULES_RC file defined above will
# fire off the associated 3270 console, log viewers, and printer tasks
# (if any)

screen -t hercules 0 ${HOME}/bin/hercules.sh 
